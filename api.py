# -*- coding: utf-8 -*-
"""api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DQJ27XpbBqXomJ-8puZ4BAdjOgfrVO1d
"""

#import library
import flask
from flask import Flask, request, jsonify
import joblib, warnings, os, requests
import pandas as pd
import numpy as np
import pickle
import sklearn
import tensorflow as tf
from sklearn.metrics.pairwise import euclidean_distances
warnings.filterwarnings('ignore')

print(flask.__version__)
print(joblib.__version__)
print(requests.__version__)
print(pd.__version__)
print(np.__version__)

app = Flask(__name__)


@app.route('/v1/predict/<Longitude>/<Latitude>', methods=["GET"])
def recommended_hospitals(Longitude, Latitude):
  """
  Predict the class and recommended_hospitals
  """
  #load dataset
  model = pickle.load(open('models/model_2.pkl', 'rb')) 
  scaler = pickle.load(open('models/sc_2.pkl', 'rb'))
  data = pickle.load(open('models/filename_drop.pkl', 'rb'))
  print(data.head())
  #mengubah inputan mejadi dataframe
  df_input = pd.DataFrame({"Longitude": [Longitude], "Latitude": [Latitude]})
  
  #fiture scaling
  data_scaled = pd.DataFrame(scaler.transform(df_input))

  #Prediksi cluster
  Cluster = model.predict(tf.reshape(data_scaled.values, (1, -1)))[0]
  data_cluster = data[data['Cluster']==Cluster].copy()
  print(Cluster)

  #Menghitung jarak user dengan rumah sakit
  data_cluster['Hospital Distance'] = data_cluster.apply(lambda x: euclidean_distances([[x.Longitude, x.Latitude]], [[Longitude, Latitude]])*1000, axis = 1)

  #Mengurutkan hasil rekomendasi
  col = ['Longitude', 'Latitude', 'Tipe', 'BPJS']
  data_cluster.sort_values(col, ascending = [False]*len(col), inplace = True)

  #Pilih jumlah N rekomendasi
  n = 50
  data_cluster = data_cluster.iloc[:n]
  data_json = data_cluster.to_json(orient='records')
    
  return data_json
  

if __name__ == '__main__':
  app.run(debug=True, port=8080)
